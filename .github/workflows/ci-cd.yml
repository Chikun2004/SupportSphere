name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        
    - name: Install Server Dependencies
      run: |
        cd server
        npm install
        
    - name: Run Server Tests
      run: |
        cd server
        npm test
        
    - name: Install Client Dependencies
      run: |
        cd client
        npm install
        
    - name: Run Client Tests
      run: |
        cd client
        npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and Push Server
      uses: docker/build-push-action@v2
      with:
        context: ./server
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/support-sphere-server:latest
        
    - name: Build and Push Client
      uses: docker/build-push-action@v2
      with:
        context: ./client
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/support-sphere-client:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd /opt/support-sphere
          docker-compose pull
          docker-compose up -d
